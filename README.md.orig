#Arc (**AR**el **C**onnection)
Arc lets you use arel without the cost of including active record as a dependency.
[Arel][1] is a very capable and [inspired][2] bit of code which provides machinery for building an [abstract syntax tree][2](ast) of a complex sql query in pure ruby.

##Arc is:
Arc is a database connection engine that provides everything Arel needs to construct an AST
Arc supports sqlite, postgresql and mysql

    @store = Arel::Table.engine = Arc::DataStores[:sqlite].new :database => ":memory:"
    superheros = Arel::Table.new :superheros
    query = superheros.project(
      superheros[:name],
      superheros[:is_awesome]
    )
    @result = @store.read(query)
    # => [{ :name => 'superman', :is_awesome => true },
    # =>  { :name => 'batman', :is_awesome => false }]

Arc handles quoting and casting of values when you create or update records and results are wrapped in lazy loading arrays and hashes.
<<<<<<< HEAD
    
=======
>>>>>>> e11634854b0583300a597ff8b7850d55048d8323
    @result.class
    # => Array
    @result[0].class
    # => Hash
    @result[0][:is_awesome].class
    # => TrueClass

Arc provides a standard and **thread safe** CRUD interface for executing queries
<<<<<<< HEAD
    
=======
>>>>>>> e11634854b0583300a597ff8b7850d55048d8323
    @store.read superheros.project(superheros[:name])
    # => [<superhero names here>]
    im = Arel::InsertManager
    im.insert([superheros[name], 'ironman'])
    @store.create im
    # => { :id => 3, :name => 'batman', :is_awesome => nil }
    Arel::Table.engine
  
Arc tells what kind of schema you're working with
<<<<<<< HEAD
    
=======
>>>>>>> e11634854b0583300a597ff8b7850d55048d8323
    @store[:superheros]
    # => <Arc::DataStores::ObjectDefinitions::SqliteTable:0x007f86d4026f68 @name="superheros">
    @store[:superheros].column_names
    # => [:is_awesome, :name, :id ]
    @store[:superheros][:id]
    # => #<Arc::DataStores::ObjectDefinitions::SqliteColumn @name='id'>
    @store[:superheros][:id].primary_key?
    # => true
    @store[:superheros][:is_awesome].type
    # => :bool
  
##Arc is *not*:
Arc is **not** an ORM.
There has been some [recent discussion][4] about the state of ruby ORMs.  Arc does not make any attempt to [pass judgement][5] against any of the fine ORMs out there.  Arc came out of a need for a lighter weight method for manipulating data in a database.  Arc gives developers flexibility to build their own frameworks and write smaller libraries with fewer dependencies.

##Setup

##Basics

##Advanced

[1]: http://github.com/rails/arel
[2]: http://twitter.com/#!/jacobsimeon/status/97183215013466113
[3]: http://en.wikipedia.org/wiki/Abstract_syntax_tree
[4]: http://solnic.eu/2011/11/29/the-state-of-ruby-orm.html
[5]: https://github.com/garybernhardt/base